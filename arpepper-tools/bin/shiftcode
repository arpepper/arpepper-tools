#!/usr/bin/perl -w

$cshift = 2;
$vshift = 1;

if (defined($ARGV[0])) {
	$cshift = $ARGV[0];
	shift;
}
if (defined($ARGV[0])) {
	$vshift = $ARGV[0];
	shift;
}


$vowels = "aeiou";
$consonants = "bcdfghjklmnpqrstvwxyz";

%vto = ();
%cto = ();

for ( $i = 0; $i < length($vowels); ++$i ) {
	#print $i, substr($vowels,$i,1), "\n";
	#print $i,"\n";
	$ni = $i + $vshift;
	$ni -= length($vowels) if ($ni >= length($vowels));
	$lv = substr($vowels,$i,1);
	$lvto = substr($vowels,$ni,1);
	$vto{$lv} = $lvto;
	$ulv = uc($lv);
	$ulvto = uc($lvto);
	$vto{$ulv} = $ulvto;
}


for ( $i = 0; $i < length($consonants); ++$i ) {
	#print $i, substr($consonants,$i,1), "\n";
	#print $i,"\n";
	$ni = $i + $cshift;
	$ni -= length($consonants) if ($ni >= length($consonants));
	$lc = substr($consonants,$i,1);
	$lcto = substr($consonants,$ni,1);
	$cto{$lc} = $lcto;
	$ulc = uc($lc);
	$ulcto = uc($lcto);
	$cto{$ulc} = $ulcto;
}

#foreach $i (sort keys %vto) {
#	printf("%s:%s\n", $i, $vto{$i});
#}
#foreach $i (sort keys %cto) {
#	printf("%s:%s\n", $i, $cto{$i});
#}

sub
encode {
	($str) = @_;

	$result = "";
	for ( $i = 0; $i < length($str); ++$i ) {
		$c = substr($str,$i,1);
		if ( (defined($a = $vto{$c})) ) {
			$result .= $a;
		}
		elsif ( (defined($a = $cto{$c})) ) {
			$result .= $a;
		}
		else {
			$result .= $c;
		}
	}
	$result;
}
		

	

while (<>) {
	$s = encode($_);
	print $s;
}
