#!/bin/bash -f

#echo HOME=$HOME
xvimd="$HOME/.xvim.d"
if [[ "$HOME" != "" && -d "$HOME" && ! -e $HOME/.xvim.d ]]
then
	umask 077
	#echo mkdir -p $HOME/.xvim.d
	mkdir -p $HOME/.xvim.d
fi

fs=12
if [[ -r $xvimd/fs ]]
then
	fs=`cat $xvimd/fs`
fi
#echo fs=$fs

# Following was determined by running xterm with successive -fs
# and using "xwininfo" to get the info for those selectively sized windows.
declare -a olddims=(
        "0x0"
        "1x3"
        "2x4"
        "2x5"
        "3x7"
        "4x9"
        "5x10"
        "6x12"
        "6x13"
        "7x15"
        "8x17"
        "9x18"
        "10x19"
        "10x22"
        "11x23"
        "12x24"
        "13x26"
        "14x28"
        "14x29"
        "15x30"
        "16x32"
        "17x33"
        "18x35"
        "18x37"
        "19x38"
        "20x39"
)

# Calculated new values...
# 1:1x2
# 2:1x3
# 3:2x4
# 4:3x5
# 5:3x7
# 6:4x8
# 7:4x10
# 8:5x11
# 9:6x13
# 10:6x14
# 11:7x15
# 12:8x16
# 13:8x18
# 14:9x19
# 15:9x20
# 16:10x21
# 17:11x24
# 18:11x25
# 19:12x26
# 20:13x27
# 21:13x29
# 22:14x30
# 23:14x31
# 24:15x32
# 25:16x34
# 26:16x35
# 27:17x37
# 28:18x38
# 29:18x40
# 30:19x40
declare -a dims=(
        "0x0"
        "1x2"
        "1x3"
        "2x4"
        "3x5"
        "3x7"
        "4x8"
        "4x10"
        "5x11"
        "6x13"
        "6x14"
        "7x15"
        "8x16"
        "8x18"
        "9x19"
        "9x20"
        "10x21"
        "11x24"
        "11x25"
        "12x26"
        "13x27"
        "13x29"
        "14x30"
        "14x31"
        "15x32"
        "16x34"
        "16x35"
        "17x37"
        "18x38"
        "18x40"
        "19x40"
)


#for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
#do
#	echo ${dims[$i]}
#done

# RESTART
# point size should be height, in absolute units 1/72 of 25.4mm
# E.g. height 296mm = 296 * 72 / 25.4 = 839 points
# fs 10 should give 80 chars or so... but doesn't
# 
# Empirically, fs appears to be pixels; could it be height?
#   No, appears to be width.

#xterm -xrm '*font:6x15' -xrm '*geometry:80x55' -xrm '*.background:#efefef' -xrm '*.foreground:#0f0f0f' -e vim
#xterm -xrm '*font:6x15' -xrm '*geometry:80x55' -xrm 'Xterm*background:#efefef' -xrm 'Xterm*foreground:#0f0f0f'
#xterm -xrm '*font:6x15' -xrm '*geometry:80x55' -xrm 'Xterm*background:#efefef' -xrm 'Xterm*foreground:#0f0f0f' -xrm '*Color:#efefef'
#xterm -xrm '*geometry:80x55' -bg '#efefef' -fg '#0f0f0f' -fs 1
args="$@"
#echo $args
#echo $DISPLAY
#echo args = "${args}"
#echo args2 = "${args[2]}"
#echo args2 = "${@}[2]"
eargs=`echo "${args}" | sed 's/ *-e .*//'`


#fs=12
sizenext=0
for a in $eargs
do
	if (( $sizenext > 0 ))
	then
# Problem: oversized fs is passed by xterm even though we don't accept it
		if (( ( 0 < $a ) && ( $a < 31 ) ))
		then
			fs=$a
			#fs=`echo "$fs" | sed 's/^.*x//'`
			#echo fs=$fs
		fi
		sizenext=0
	fi
	case $a in
	(-fs)
		sizenext=1
		;;
	(*)
		sizenext=0
	esac
done
g=""
# Note: no // around RE
if [[ "${eargs}" =~ "-g" ]]
then
	# Following would be fooled by e.g. -title our-geometry
	g=`echo "${eargs}" | sed 's/^.*-g/-g/' | sed 's/^-g[^ ]*  *\([^ ]*\).*/\1/'`
	eargs=`echo "${eargs}" | sed 's/-g[^ ]* [^ ]*//'`
fi
#echo g="$g" eargs="${eargs}"

#echo fs=$fs
#echo dim ${dims[$fs]}

# Mon Jan 17 11:04:21 EST 2011 -
#   faceSize and/or -fa became harmful on Solaris X display
#   (perhaps because of shutting down of some font servers?)
# I wish I knew how to specify a font for the Ubuntu X environment.
# -fa is the facename
faces=""
case "$DISPLAY" in
	:[0-9]*|:[0-9]*.[0-9]|localhost:[0-9]*|localhost:[0-9]*.[0-9])
	#((localhost|):[0-9]*(.[0-9]|))
	#:[0-9]*.0|localhost:[0-9]*.0)
		# Note in bash extra quoting is not needed to
		# and can be harmful
		faces=""
		faces="$faces -xrm *FaceSize:$fs"
		faces="$faces -xrm *faceSize:$fs"
		faces="$faces -xrm *FaceSize1:6"
		faces="$faces -xrm *faceSize1:6"
		faces="$faces -xrm *FaceSize2:9"
		faces="$faces -xrm *faceSize2:9"
		faces="$faces -xrm *FaceSize3:10"
		faces="$faces -xrm *faceSize3:10"
		faces="$faces -xrm *FaceSize4:12"
		faces="$faces -xrm *faceSize4:12"
		faces="$faces -xrm *FaceSize5:14"
		faces="$faces -xrm *faceSize5:14"
		faces="$faces -xrm *FaceSize6:16"
		faces="$faces -xrm *faceSize6:16"
		# Above gets ignored/overwritten:
		# Other experiments suggested above is no longer necessary.
		faces=""
		faces="$faces -fa x"
		;;
	*)
		echo $DISPLAY
esac

#echo faces=$faces

# http://stackoverflow.com/questions/17810483/determine-character-cell-size-of-a-monospaced-truetype-font-for-xterm
# shows one the command "xwininfo"
# It would seem that could be rather expensive.
# Also have difficulty getting right $WINDOWID passed to it
# And you see the unwanted window flash up.

# But see...
# xwininfo -root


# TODO: work out a reasonable default height
# Want to examine args and find a "-fs" argument if any
# Note we will specify -geometry which may be overridden later anyway.
# Let alone that window manager may adjust oversized windows also.
# 
cheight=${dims[$fs]}
#echo cheight=$cheight
cheight=`echo "$cheight" | sed 's/^.*x//'`
#xrandr on a new system added "primary" after connect; geometry not positional
#height=`xrandr --current | grep ' connected ' | awk '{print $3}' | sed 's/[^x]*x//' | sed 's/[+].*//' | sort -n | head -1`
pheight=`xwininfo -root | grep '^ *Height:  *' | sed 's/^.*: //'`
# 96 should be a parameter; represents normal vertical screen use
# height=`expr '(' $pheight - 96 ')' / $cheight`
vusage=80
if (( $fs > 6 ))
then
	vusage=48
fi
height=`expr '(' $pheight - $vusage ')' / $cheight`
#echo height=$height
# PROBLEM: fs is the width, height can vary; usually 2 is good estimate
# We worked this out; $dims provides the answer.

# Of great interest is width in pixels.

# I am not sure we need $faces anymore
#    $faces \
#    -xrm '*renderFont:on' \
#    -xrm '*RenderFont:on' \
#    -xrm '*FaceName:Dejavu mono' \
#    -xrm '*faceName:Dejavu mono' \
xterm \
    -xrm '*Scrollbar.thickness:5' \
    -xrm '*ScrollBar*background: #ee0000' \
    -xrm '*XmScrollBar.background: #ee0000' \
    -xrm '*ScrollBar.foreground: #ee0000' \
    -xrm '*XmScrollBar.foreground: #ee0000' \
    -xrm '*XmScrollBar.thickness: 5' \
    -bg '#efefef' -fg '#0f0f0f' \
    $faces \
    -xrm '*renderFont:on' \
    -xrm '*RenderFont:on' \
    -xrm '*Logfile:/home/arpepper/xterm.log' \
    -fs $fs \
    -xrm "*geometry:80x$height" \
    -sb -sl 15000 "$@"

# Problem if we want to manipulate "$@" contents
#Note:
#  -bg  xterm*background: or XTerm*background:
#  -fg  xterm*foreground: or XTerm*foreground

# Note: FaceSize xrm started working after -fa '8x' was added!?
#    -xrm '*FaceSize:12' \
#    -xrm '*faceSize:12' \
#    -xrm '*FaceSize1:12' \
#    -xrm '*faceSize1:12' \
#    -xrm '*FaceSize2:12' \
#    -xrm '*faceSize2:12' \
#    -xrm '*FaceSize3:12' \
#    -xrm '*faceSize3:12' \
#    -xrm '*FaceSize4:12' \
#    -xrm '*faceSize4:12' \
#    -xrm '*FaceSize5:12' \
#    -xrm '*faceSize5:12' \
#    -xrm '*FaceSize6:12' \
#    -xrm '*faceSize6:12' \
#    -fa 'x' \
#
# Later this stopped working in some environments.
#

